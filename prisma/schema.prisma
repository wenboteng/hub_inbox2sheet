generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Article {
  id          String   @id @default(cuid())
  url         String   @unique
  question    String
  answer      String
  category    String
  platform    String
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  paragraphs  ArticleParagraph[]
  
  // New fields for user-generated content
  contentType String   @default("official") // "official" | "community" | "user_generated"
  source      String   @default("help_center") // "help_center" | "community" | "reddit" | "quora" | "blog"
  author      String?  // For user-generated content
  votes       Int      @default(0) // For community content with voting
  isVerified  Boolean  @default(false) // For community content verification
  
  // Content-based deduplication
  contentHash String?  // SHA-256 hash of the main content for deduplication
  isDuplicate Boolean  @default(false) // Flag for near-duplicate content

  // New fields for refactored crawling system
  lastCheckedAt DateTime? // When this article was last checked for updates
  etag          String?   // ETag header for change detection
  lastModified  String?   // Last-Modified header for change detection
  crawlMode     String    @default("discovery") // "discovery" | "recheck"
  crawlStatus   String    @default("active") // "active" | "archived" | "error"

  // Language detection
  language     String    @default("en") // ISO 639-1 language code (e.g., "en", "es", "it", "fr")

  @@index([platform])
  @@index([category])
  @@index([lastUpdated])
  @@index([contentType])
  @@index([source])
  @@index([contentHash])
  @@index([lastCheckedAt])
  @@index([crawlMode])
  @@index([crawlStatus])
  @@index([language])
}

model Answer {
  id                   String   @id @default(cuid())
  question             String
  answer               String
  firstAnswerParagraph String?
  summary              String?
  sourceUrl            String   @unique
  platform             String
  category             String
  tags                 String[]
  dateCollected        DateTime @default(now())
  lastCrawled          DateTime @default(now())
  crawlFrequency       String   @default("daily")
  isActive             Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([platform])
  @@index([category])
  @@index([tags])
  @@index([lastCrawled])
}

model CrawlJob {
  id        String    @id @default(cuid())
  source    String
  status    String
  startedAt DateTime?
  endedAt   DateTime?
  error     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model SubmittedQuestion {
  id           String   @id @default(cuid())
  question     String
  platform     String
  email        String?
  status       String   @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  manualAnswer String?
  isPublic     Boolean  @default(false)
  sourceUrl    String?
  tags         String[]
  aiGenerated  Boolean  @default(false)
  tone         String?
  embedding    Float[]

  @@index([platform])
  @@index([status])
}

model ArticleParagraph {
  id        String   @id @default(cuid())
  articleId String
  text      String   @db.Text
  embedding Json     // Store embeddings as JSON array
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@index([articleId])
}

model CrawlQueue {
  id          String   @id @default(cuid())
  url         String   @unique
  platform    String
  type        String   // "article" | "thread" | "category"
  status      String   @default("pending") // "pending" | "processing" | "completed" | "failed" | "skipped"
  priority    Int      @default(5) // 1-10, higher = more important
  firstSeen   DateTime @default(now())
  lastChecked DateTime?
  retryCount  Int      @default(0)
  error       String?
  metadata    Json?    // Additional platform-specific data
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([platform])
  @@index([type])
  @@index([status])
  @@index([priority])
  @@index([firstSeen])
  @@index([lastChecked])
}
