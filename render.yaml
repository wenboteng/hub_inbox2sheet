# Render Blueprint for ota-answer-hub
# This file defines the infrastructure for the application, including a web
# service and a daily cron job. It uses an Environment Group to securely
# manage and share environment variables between the services.
# See https://render.com/docs/blueprint-spec for a detailed reference.

envVarGroups:
  - name: ota-hub-secrets
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: NEXT_PUBLIC_BASE_URL
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: NODE_VERSION
        value: 18.20.2
      # The PUPPETEER variables are essential for the cron job to install
      # and cache the Chrome browser correctly in Render's environment.
      - key: PUPPETEER_CACHE_DIR
        value: /opt/render/.cache/puppeteer
      - key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
        value: false
      # Optional secrets for other data sources can be added here.
      - key: EXPEDIA_USERNAME
        sync: false
      - key: EXPEDIA_PASSWORD
        sync: false
      - key: EXPEDIA_SESSION_COOKIE
        sync: false
      - key: BOOKING_API_TOKEN
        sync: false
      - key: BOOKING_SESSION_COOKIE
        sync: false
      - key: BOOKING_XSRF_TOKEN
        sync: false

services:
  # Main Next.js Web Application
  - type: web
    name: ota-answer-hub
    env: node
    # Links to the shared environment group
    envFrom:
      - envGroup: ota-hub-secrets
    buildCommand: |
      npm install
      npx prisma generate
      npm run build
    startCommand: npm start
    healthCheckPath: /
    autoDeploy: true
    buildFilter:
      paths:
        - package.json
        - src/**
        - prisma/**
        - next.config.js
        - render.yaml

jobs:
  # Daily cron job to scrape all configured data sources
  - type: cron
    name: ota-answer-hub-crawler
    env: node
    # Links to the shared environment group
    envFrom:
      - envGroup: ota-hub-secrets
    schedule: "0 2 * * *" # Runs daily at 2am UTC
    buildCommand: |
      # Build timestamp: 2025-06-21-20:45:00 - Blueprint-ready build
      echo "Build started for comprehensive scraper..."
      npm install
      npx prisma generate
      npm run build:scripts
      
      echo "Installing Chrome for Puppeteer..."
      npx puppeteer browsers install chrome || {
        echo "Failed to install Chrome via puppeteer. Trying system install..."
        apt-get update && apt-get install -y google-chrome-stable || echo "System Chrome installation failed. The script will rely on the bundled version."
      }
      
      echo "Verifying Chrome installation location..."
      ls -la /opt/render/.cache/puppeteer/chrome/ || echo "Puppeteer cache directory not found, which may be expected on first build."
      echo "Build scripts completed successfully."
    startCommand: npm run scrape:all
    buildFilter:
      paths:
        - package.json
        - src/**
        - prisma/**
        - VERSION
        - render.yaml 